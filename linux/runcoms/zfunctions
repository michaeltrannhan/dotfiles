# shellcheck disable=SC2148

function ssh-hostgen {
  if [[ $# -ne 5 ]]; then
    echo 'ssh-hostgen <algorithm> <host> <hostname> <port> <user>'
    echo ''
    echo '            algorithm: ed25519, ecdsa, dsa, rsa'
    echo '            host:      alias that you use to access this host'
    echo '            hostname:  hostname of the host'
    echo '            port:      port of the host, usually 22'
    echo '            user:      user to login to the host'
    return 0
  fi

  local algorithm="$1"
  case "$algorithm" in
  ed25519)
    algorithm='ed25519'
    ;;
  ecdsa)
    algorithm='ecdsa -b 521'
    ;;
  dsa)
    algorithm='dsa'
    ;;
  rsa)
    algorithm='rsa -b 4096'
    ;;
  *)
    echo 'algorithm must be one of ed25519, ecdsa, dsa, rsa'
    return 1
    ;;
  esac
  local h="$2"
  local hostname="$3"
  local p="$4"
  if ! [[ $p =~ ^[0-9]+$ ]]; then
    echo 'invalid port' >&2
    return 1
  fi
  local u="$5"

  ssh-keygen -t "$algorithm" -f "$HOME/.ssh/id.d/$1_$h" -C "$u@$hostname"

  cat <<EOF >>"$HOME/.ssh/config.d/$hostname.conf"
Host $h
  HostName $hostname
  Port $p
  User $u
  IdentityFile ~/.ssh/id.d/$1_$h
  IdentitiesOnly yes
  #AddKeysToAgent yes
  #ForwardAgent yes

EOF

  chmod 0600 "$HOME/.ssh/config.d/$hostname.conf"
}

function set-formatting {
  editorconfig=$(
    cat <<EOF
root = true

[*]
indent_style = space
indent_size = 2
end_of_line = lf
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true

[*.{bat,cmd}]
end_of_line = crlf

[*.json]
insert_final_newline = false

[*.py]
indent_size = 4

EOF
  )

  if [[ -f '.editorconfig' ]]; then
    echo "$editorconfig"
  else
    echo "$editorconfig" >.editorconfig
  fi
}

function create-tmp {
  pushd "$(mktemp -d)" || exit 1
}

function clear-tmp {
  TMPDIR=$PWD
  popd || exit 1
  command rm -rf "$TMPDIR"
}

function clear-history {
  echo '' >"$HISTFILE"
}
